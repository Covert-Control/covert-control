/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StoriesStoryIdImport } from './routes/stories/$storyId'
import { Route as StoriesStoryIdIndexImport } from './routes/stories/$storyId.index'
import { Route as StoriesStoryIdEditImport } from './routes/stories/$storyId.edit'

// Create Virtual Routes

const YourSubmissionsLazyImport = createFileRoute('/your-submissions')()
const SubmitLazyImport = createFileRoute('/submit')()
const StoriesLazyImport = createFileRoute('/stories')()
const NothingFoundLazyImport = createFileRoute('/nothing-found')()
const AuthorsLazyImport = createFileRoute('/authors')()
const AuthenticationLazyImport = createFileRoute('/authentication')()
const AccountSettingsLazyImport = createFileRoute('/account-settings')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const AuthorsAuthorIdLazyImport = createFileRoute('/authors/$authorId')()

// Create/Update Routes

const YourSubmissionsLazyRoute = YourSubmissionsLazyImport.update({
  id: '/your-submissions',
  path: '/your-submissions',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/your-submissions.lazy').then((d) => d.Route),
)

const SubmitLazyRoute = SubmitLazyImport.update({
  id: '/submit',
  path: '/submit',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/submit.lazy').then((d) => d.Route))

const StoriesLazyRoute = StoriesLazyImport.update({
  id: '/stories',
  path: '/stories',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/stories.lazy').then((d) => d.Route))

const NothingFoundLazyRoute = NothingFoundLazyImport.update({
  id: '/nothing-found',
  path: '/nothing-found',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/nothing-found.lazy').then((d) => d.Route))

const AuthorsLazyRoute = AuthorsLazyImport.update({
  id: '/authors',
  path: '/authors',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/authors.lazy').then((d) => d.Route))

const AuthenticationLazyRoute = AuthenticationLazyImport.update({
  id: '/authentication',
  path: '/authentication',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/authentication.lazy').then((d) => d.Route),
)

const AccountSettingsLazyRoute = AccountSettingsLazyImport.update({
  id: '/account-settings',
  path: '/account-settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/account-settings.lazy').then((d) => d.Route),
)

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthorsAuthorIdLazyRoute = AuthorsAuthorIdLazyImport.update({
  id: '/$authorId',
  path: '/$authorId',
  getParentRoute: () => AuthorsLazyRoute,
} as any).lazy(() =>
  import('./routes/authors/$authorId.lazy').then((d) => d.Route),
)

const StoriesStoryIdRoute = StoriesStoryIdImport.update({
  id: '/$storyId',
  path: '/$storyId',
  getParentRoute: () => StoriesLazyRoute,
} as any)

const StoriesStoryIdIndexRoute = StoriesStoryIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StoriesStoryIdRoute,
} as any)

const StoriesStoryIdEditRoute = StoriesStoryIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => StoriesStoryIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/account-settings': {
      id: '/account-settings'
      path: '/account-settings'
      fullPath: '/account-settings'
      preLoaderRoute: typeof AccountSettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/authentication': {
      id: '/authentication'
      path: '/authentication'
      fullPath: '/authentication'
      preLoaderRoute: typeof AuthenticationLazyImport
      parentRoute: typeof rootRoute
    }
    '/authors': {
      id: '/authors'
      path: '/authors'
      fullPath: '/authors'
      preLoaderRoute: typeof AuthorsLazyImport
      parentRoute: typeof rootRoute
    }
    '/nothing-found': {
      id: '/nothing-found'
      path: '/nothing-found'
      fullPath: '/nothing-found'
      preLoaderRoute: typeof NothingFoundLazyImport
      parentRoute: typeof rootRoute
    }
    '/stories': {
      id: '/stories'
      path: '/stories'
      fullPath: '/stories'
      preLoaderRoute: typeof StoriesLazyImport
      parentRoute: typeof rootRoute
    }
    '/submit': {
      id: '/submit'
      path: '/submit'
      fullPath: '/submit'
      preLoaderRoute: typeof SubmitLazyImport
      parentRoute: typeof rootRoute
    }
    '/your-submissions': {
      id: '/your-submissions'
      path: '/your-submissions'
      fullPath: '/your-submissions'
      preLoaderRoute: typeof YourSubmissionsLazyImport
      parentRoute: typeof rootRoute
    }
    '/stories/$storyId': {
      id: '/stories/$storyId'
      path: '/$storyId'
      fullPath: '/stories/$storyId'
      preLoaderRoute: typeof StoriesStoryIdImport
      parentRoute: typeof StoriesLazyImport
    }
    '/authors/$authorId': {
      id: '/authors/$authorId'
      path: '/$authorId'
      fullPath: '/authors/$authorId'
      preLoaderRoute: typeof AuthorsAuthorIdLazyImport
      parentRoute: typeof AuthorsLazyImport
    }
    '/stories/$storyId/edit': {
      id: '/stories/$storyId/edit'
      path: '/edit'
      fullPath: '/stories/$storyId/edit'
      preLoaderRoute: typeof StoriesStoryIdEditImport
      parentRoute: typeof StoriesStoryIdImport
    }
    '/stories/$storyId/': {
      id: '/stories/$storyId/'
      path: '/'
      fullPath: '/stories/$storyId/'
      preLoaderRoute: typeof StoriesStoryIdIndexImport
      parentRoute: typeof StoriesStoryIdImport
    }
  }
}

// Create and export the route tree

interface AuthorsLazyRouteChildren {
  AuthorsAuthorIdLazyRoute: typeof AuthorsAuthorIdLazyRoute
}

const AuthorsLazyRouteChildren: AuthorsLazyRouteChildren = {
  AuthorsAuthorIdLazyRoute: AuthorsAuthorIdLazyRoute,
}

const AuthorsLazyRouteWithChildren = AuthorsLazyRoute._addFileChildren(
  AuthorsLazyRouteChildren,
)

interface StoriesStoryIdRouteChildren {
  StoriesStoryIdEditRoute: typeof StoriesStoryIdEditRoute
  StoriesStoryIdIndexRoute: typeof StoriesStoryIdIndexRoute
}

const StoriesStoryIdRouteChildren: StoriesStoryIdRouteChildren = {
  StoriesStoryIdEditRoute: StoriesStoryIdEditRoute,
  StoriesStoryIdIndexRoute: StoriesStoryIdIndexRoute,
}

const StoriesStoryIdRouteWithChildren = StoriesStoryIdRoute._addFileChildren(
  StoriesStoryIdRouteChildren,
)

interface StoriesLazyRouteChildren {
  StoriesStoryIdRoute: typeof StoriesStoryIdRouteWithChildren
}

const StoriesLazyRouteChildren: StoriesLazyRouteChildren = {
  StoriesStoryIdRoute: StoriesStoryIdRouteWithChildren,
}

const StoriesLazyRouteWithChildren = StoriesLazyRoute._addFileChildren(
  StoriesLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/account-settings': typeof AccountSettingsLazyRoute
  '/authentication': typeof AuthenticationLazyRoute
  '/authors': typeof AuthorsLazyRouteWithChildren
  '/nothing-found': typeof NothingFoundLazyRoute
  '/stories': typeof StoriesLazyRouteWithChildren
  '/submit': typeof SubmitLazyRoute
  '/your-submissions': typeof YourSubmissionsLazyRoute
  '/stories/$storyId': typeof StoriesStoryIdRouteWithChildren
  '/authors/$authorId': typeof AuthorsAuthorIdLazyRoute
  '/stories/$storyId/edit': typeof StoriesStoryIdEditRoute
  '/stories/$storyId/': typeof StoriesStoryIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/account-settings': typeof AccountSettingsLazyRoute
  '/authentication': typeof AuthenticationLazyRoute
  '/authors': typeof AuthorsLazyRouteWithChildren
  '/nothing-found': typeof NothingFoundLazyRoute
  '/stories': typeof StoriesLazyRouteWithChildren
  '/submit': typeof SubmitLazyRoute
  '/your-submissions': typeof YourSubmissionsLazyRoute
  '/authors/$authorId': typeof AuthorsAuthorIdLazyRoute
  '/stories/$storyId/edit': typeof StoriesStoryIdEditRoute
  '/stories/$storyId': typeof StoriesStoryIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/account-settings': typeof AccountSettingsLazyRoute
  '/authentication': typeof AuthenticationLazyRoute
  '/authors': typeof AuthorsLazyRouteWithChildren
  '/nothing-found': typeof NothingFoundLazyRoute
  '/stories': typeof StoriesLazyRouteWithChildren
  '/submit': typeof SubmitLazyRoute
  '/your-submissions': typeof YourSubmissionsLazyRoute
  '/stories/$storyId': typeof StoriesStoryIdRouteWithChildren
  '/authors/$authorId': typeof AuthorsAuthorIdLazyRoute
  '/stories/$storyId/edit': typeof StoriesStoryIdEditRoute
  '/stories/$storyId/': typeof StoriesStoryIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/account-settings'
    | '/authentication'
    | '/authors'
    | '/nothing-found'
    | '/stories'
    | '/submit'
    | '/your-submissions'
    | '/stories/$storyId'
    | '/authors/$authorId'
    | '/stories/$storyId/edit'
    | '/stories/$storyId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/account-settings'
    | '/authentication'
    | '/authors'
    | '/nothing-found'
    | '/stories'
    | '/submit'
    | '/your-submissions'
    | '/authors/$authorId'
    | '/stories/$storyId/edit'
    | '/stories/$storyId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/account-settings'
    | '/authentication'
    | '/authors'
    | '/nothing-found'
    | '/stories'
    | '/submit'
    | '/your-submissions'
    | '/stories/$storyId'
    | '/authors/$authorId'
    | '/stories/$storyId/edit'
    | '/stories/$storyId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AccountSettingsLazyRoute: typeof AccountSettingsLazyRoute
  AuthenticationLazyRoute: typeof AuthenticationLazyRoute
  AuthorsLazyRoute: typeof AuthorsLazyRouteWithChildren
  NothingFoundLazyRoute: typeof NothingFoundLazyRoute
  StoriesLazyRoute: typeof StoriesLazyRouteWithChildren
  SubmitLazyRoute: typeof SubmitLazyRoute
  YourSubmissionsLazyRoute: typeof YourSubmissionsLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  AccountSettingsLazyRoute: AccountSettingsLazyRoute,
  AuthenticationLazyRoute: AuthenticationLazyRoute,
  AuthorsLazyRoute: AuthorsLazyRouteWithChildren,
  NothingFoundLazyRoute: NothingFoundLazyRoute,
  StoriesLazyRoute: StoriesLazyRouteWithChildren,
  SubmitLazyRoute: SubmitLazyRoute,
  YourSubmissionsLazyRoute: YourSubmissionsLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/account-settings",
        "/authentication",
        "/authors",
        "/nothing-found",
        "/stories",
        "/submit",
        "/your-submissions"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/account-settings": {
      "filePath": "account-settings.lazy.tsx"
    },
    "/authentication": {
      "filePath": "authentication.lazy.tsx"
    },
    "/authors": {
      "filePath": "authors.lazy.tsx",
      "children": [
        "/authors/$authorId"
      ]
    },
    "/nothing-found": {
      "filePath": "nothing-found.lazy.tsx"
    },
    "/stories": {
      "filePath": "stories.lazy.tsx",
      "children": [
        "/stories/$storyId"
      ]
    },
    "/submit": {
      "filePath": "submit.lazy.tsx"
    },
    "/your-submissions": {
      "filePath": "your-submissions.lazy.tsx"
    },
    "/stories/$storyId": {
      "filePath": "stories/$storyId.tsx",
      "parent": "/stories",
      "children": [
        "/stories/$storyId/edit",
        "/stories/$storyId/"
      ]
    },
    "/authors/$authorId": {
      "filePath": "authors/$authorId.lazy.tsx",
      "parent": "/authors"
    },
    "/stories/$storyId/edit": {
      "filePath": "stories/$storyId.edit.tsx",
      "parent": "/stories/$storyId"
    },
    "/stories/$storyId/": {
      "filePath": "stories/$storyId.index.tsx",
      "parent": "/stories/$storyId"
    }
  }
}
ROUTE_MANIFEST_END */

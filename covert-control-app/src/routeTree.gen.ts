/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SubmitLazyImport = createFileRoute('/submit')()
const NothingFoundLazyImport = createFileRoute('/nothing-found')()
const AuthenticationLazyImport = createFileRoute('/authentication')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SubmitLazyRoute = SubmitLazyImport.update({
  id: '/submit',
  path: '/submit',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/submit.lazy').then((d) => d.Route))

const NothingFoundLazyRoute = NothingFoundLazyImport.update({
  id: '/nothing-found',
  path: '/nothing-found',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/nothing-found.lazy').then((d) => d.Route))

const AuthenticationLazyRoute = AuthenticationLazyImport.update({
  id: '/authentication',
  path: '/authentication',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/authentication.lazy').then((d) => d.Route),
)

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/authentication': {
      id: '/authentication'
      path: '/authentication'
      fullPath: '/authentication'
      preLoaderRoute: typeof AuthenticationLazyImport
      parentRoute: typeof rootRoute
    }
    '/nothing-found': {
      id: '/nothing-found'
      path: '/nothing-found'
      fullPath: '/nothing-found'
      preLoaderRoute: typeof NothingFoundLazyImport
      parentRoute: typeof rootRoute
    }
    '/submit': {
      id: '/submit'
      path: '/submit'
      fullPath: '/submit'
      preLoaderRoute: typeof SubmitLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/authentication': typeof AuthenticationLazyRoute
  '/nothing-found': typeof NothingFoundLazyRoute
  '/submit': typeof SubmitLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/authentication': typeof AuthenticationLazyRoute
  '/nothing-found': typeof NothingFoundLazyRoute
  '/submit': typeof SubmitLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/authentication': typeof AuthenticationLazyRoute
  '/nothing-found': typeof NothingFoundLazyRoute
  '/submit': typeof SubmitLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/authentication' | '/nothing-found' | '/submit'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/authentication' | '/nothing-found' | '/submit'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/authentication'
    | '/nothing-found'
    | '/submit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AuthenticationLazyRoute: typeof AuthenticationLazyRoute
  NothingFoundLazyRoute: typeof NothingFoundLazyRoute
  SubmitLazyRoute: typeof SubmitLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  AuthenticationLazyRoute: AuthenticationLazyRoute,
  NothingFoundLazyRoute: NothingFoundLazyRoute,
  SubmitLazyRoute: SubmitLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/authentication",
        "/nothing-found",
        "/submit"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/authentication": {
      "filePath": "authentication.lazy.tsx"
    },
    "/nothing-found": {
      "filePath": "nothing-found.lazy.tsx"
    },
    "/submit": {
      "filePath": "submit.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */

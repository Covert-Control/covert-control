/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as StoriesStoryIdRouteImport } from './routes/stories/$storyId'
import { Route as StoriesStoryIdIndexRouteImport } from './routes/stories/$storyId.index'
import { Route as StoriesStoryIdEditRouteImport } from './routes/stories/$storyId.edit'

const YourSubmissionsLazyRouteImport = createFileRoute('/your-submissions')()
const SubmitLazyRouteImport = createFileRoute('/submit')()
const StoriesLazyRouteImport = createFileRoute('/stories')()
const NothingFoundLazyRouteImport = createFileRoute('/nothing-found')()
const FavoritesLazyRouteImport = createFileRoute('/favorites')()
const AuthorsLazyRouteImport = createFileRoute('/authors')()
const AuthenticationLazyRouteImport = createFileRoute('/authentication')()
const AccountSettingsLazyRouteImport = createFileRoute('/account-settings')()
const AboutLazyRouteImport = createFileRoute('/about')()
const IndexLazyRouteImport = createFileRoute('/')()
const AuthorsAuthorIdLazyRouteImport = createFileRoute('/authors/$authorId')()

const YourSubmissionsLazyRoute = YourSubmissionsLazyRouteImport.update({
  id: '/your-submissions',
  path: '/your-submissions',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/your-submissions.lazy').then((d) => d.Route),
)
const SubmitLazyRoute = SubmitLazyRouteImport.update({
  id: '/submit',
  path: '/submit',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/submit.lazy').then((d) => d.Route))
const StoriesLazyRoute = StoriesLazyRouteImport.update({
  id: '/stories',
  path: '/stories',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/stories.lazy').then((d) => d.Route))
const NothingFoundLazyRoute = NothingFoundLazyRouteImport.update({
  id: '/nothing-found',
  path: '/nothing-found',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/nothing-found.lazy').then((d) => d.Route))
const FavoritesLazyRoute = FavoritesLazyRouteImport.update({
  id: '/favorites',
  path: '/favorites',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/favorites.lazy').then((d) => d.Route))
const AuthorsLazyRoute = AuthorsLazyRouteImport.update({
  id: '/authors',
  path: '/authors',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/authors.lazy').then((d) => d.Route))
const AuthenticationLazyRoute = AuthenticationLazyRouteImport.update({
  id: '/authentication',
  path: '/authentication',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/authentication.lazy').then((d) => d.Route),
)
const AccountSettingsLazyRoute = AccountSettingsLazyRouteImport.update({
  id: '/account-settings',
  path: '/account-settings',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/account-settings.lazy').then((d) => d.Route),
)
const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const AuthorsAuthorIdLazyRoute = AuthorsAuthorIdLazyRouteImport.update({
  id: '/$authorId',
  path: '/$authorId',
  getParentRoute: () => AuthorsLazyRoute,
} as any).lazy(() =>
  import('./routes/authors/$authorId.lazy').then((d) => d.Route),
)
const StoriesStoryIdRoute = StoriesStoryIdRouteImport.update({
  id: '/$storyId',
  path: '/$storyId',
  getParentRoute: () => StoriesLazyRoute,
} as any)
const StoriesStoryIdIndexRoute = StoriesStoryIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StoriesStoryIdRoute,
} as any)
const StoriesStoryIdEditRoute = StoriesStoryIdEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => StoriesStoryIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/account-settings': typeof AccountSettingsLazyRoute
  '/authentication': typeof AuthenticationLazyRoute
  '/authors': typeof AuthorsLazyRouteWithChildren
  '/favorites': typeof FavoritesLazyRoute
  '/nothing-found': typeof NothingFoundLazyRoute
  '/stories': typeof StoriesLazyRouteWithChildren
  '/submit': typeof SubmitLazyRoute
  '/your-submissions': typeof YourSubmissionsLazyRoute
  '/stories/$storyId': typeof StoriesStoryIdRouteWithChildren
  '/authors/$authorId': typeof AuthorsAuthorIdLazyRoute
  '/stories/$storyId/edit': typeof StoriesStoryIdEditRoute
  '/stories/$storyId/': typeof StoriesStoryIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/account-settings': typeof AccountSettingsLazyRoute
  '/authentication': typeof AuthenticationLazyRoute
  '/authors': typeof AuthorsLazyRouteWithChildren
  '/favorites': typeof FavoritesLazyRoute
  '/nothing-found': typeof NothingFoundLazyRoute
  '/stories': typeof StoriesLazyRouteWithChildren
  '/submit': typeof SubmitLazyRoute
  '/your-submissions': typeof YourSubmissionsLazyRoute
  '/authors/$authorId': typeof AuthorsAuthorIdLazyRoute
  '/stories/$storyId/edit': typeof StoriesStoryIdEditRoute
  '/stories/$storyId': typeof StoriesStoryIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/account-settings': typeof AccountSettingsLazyRoute
  '/authentication': typeof AuthenticationLazyRoute
  '/authors': typeof AuthorsLazyRouteWithChildren
  '/favorites': typeof FavoritesLazyRoute
  '/nothing-found': typeof NothingFoundLazyRoute
  '/stories': typeof StoriesLazyRouteWithChildren
  '/submit': typeof SubmitLazyRoute
  '/your-submissions': typeof YourSubmissionsLazyRoute
  '/stories/$storyId': typeof StoriesStoryIdRouteWithChildren
  '/authors/$authorId': typeof AuthorsAuthorIdLazyRoute
  '/stories/$storyId/edit': typeof StoriesStoryIdEditRoute
  '/stories/$storyId/': typeof StoriesStoryIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/account-settings'
    | '/authentication'
    | '/authors'
    | '/favorites'
    | '/nothing-found'
    | '/stories'
    | '/submit'
    | '/your-submissions'
    | '/stories/$storyId'
    | '/authors/$authorId'
    | '/stories/$storyId/edit'
    | '/stories/$storyId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/account-settings'
    | '/authentication'
    | '/authors'
    | '/favorites'
    | '/nothing-found'
    | '/stories'
    | '/submit'
    | '/your-submissions'
    | '/authors/$authorId'
    | '/stories/$storyId/edit'
    | '/stories/$storyId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/account-settings'
    | '/authentication'
    | '/authors'
    | '/favorites'
    | '/nothing-found'
    | '/stories'
    | '/submit'
    | '/your-submissions'
    | '/stories/$storyId'
    | '/authors/$authorId'
    | '/stories/$storyId/edit'
    | '/stories/$storyId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AccountSettingsLazyRoute: typeof AccountSettingsLazyRoute
  AuthenticationLazyRoute: typeof AuthenticationLazyRoute
  AuthorsLazyRoute: typeof AuthorsLazyRouteWithChildren
  FavoritesLazyRoute: typeof FavoritesLazyRoute
  NothingFoundLazyRoute: typeof NothingFoundLazyRoute
  StoriesLazyRoute: typeof StoriesLazyRouteWithChildren
  SubmitLazyRoute: typeof SubmitLazyRoute
  YourSubmissionsLazyRoute: typeof YourSubmissionsLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/your-submissions': {
      id: '/your-submissions'
      path: '/your-submissions'
      fullPath: '/your-submissions'
      preLoaderRoute: typeof YourSubmissionsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/submit': {
      id: '/submit'
      path: '/submit'
      fullPath: '/submit'
      preLoaderRoute: typeof SubmitLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stories': {
      id: '/stories'
      path: '/stories'
      fullPath: '/stories'
      preLoaderRoute: typeof StoriesLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/nothing-found': {
      id: '/nothing-found'
      path: '/nothing-found'
      fullPath: '/nothing-found'
      preLoaderRoute: typeof NothingFoundLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/favorites': {
      id: '/favorites'
      path: '/favorites'
      fullPath: '/favorites'
      preLoaderRoute: typeof FavoritesLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/authors': {
      id: '/authors'
      path: '/authors'
      fullPath: '/authors'
      preLoaderRoute: typeof AuthorsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/authentication': {
      id: '/authentication'
      path: '/authentication'
      fullPath: '/authentication'
      preLoaderRoute: typeof AuthenticationLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account-settings': {
      id: '/account-settings'
      path: '/account-settings'
      fullPath: '/account-settings'
      preLoaderRoute: typeof AccountSettingsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/authors/$authorId': {
      id: '/authors/$authorId'
      path: '/$authorId'
      fullPath: '/authors/$authorId'
      preLoaderRoute: typeof AuthorsAuthorIdLazyRouteImport
      parentRoute: typeof AuthorsLazyRoute
    }
    '/stories/$storyId': {
      id: '/stories/$storyId'
      path: '/$storyId'
      fullPath: '/stories/$storyId'
      preLoaderRoute: typeof StoriesStoryIdRouteImport
      parentRoute: typeof StoriesLazyRoute
    }
    '/stories/$storyId/': {
      id: '/stories/$storyId/'
      path: '/'
      fullPath: '/stories/$storyId/'
      preLoaderRoute: typeof StoriesStoryIdIndexRouteImport
      parentRoute: typeof StoriesStoryIdRoute
    }
    '/stories/$storyId/edit': {
      id: '/stories/$storyId/edit'
      path: '/edit'
      fullPath: '/stories/$storyId/edit'
      preLoaderRoute: typeof StoriesStoryIdEditRouteImport
      parentRoute: typeof StoriesStoryIdRoute
    }
  }
}

interface AuthorsLazyRouteChildren {
  AuthorsAuthorIdLazyRoute: typeof AuthorsAuthorIdLazyRoute
}

const AuthorsLazyRouteChildren: AuthorsLazyRouteChildren = {
  AuthorsAuthorIdLazyRoute: AuthorsAuthorIdLazyRoute,
}

const AuthorsLazyRouteWithChildren = AuthorsLazyRoute._addFileChildren(
  AuthorsLazyRouteChildren,
)

interface StoriesStoryIdRouteChildren {
  StoriesStoryIdEditRoute: typeof StoriesStoryIdEditRoute
  StoriesStoryIdIndexRoute: typeof StoriesStoryIdIndexRoute
}

const StoriesStoryIdRouteChildren: StoriesStoryIdRouteChildren = {
  StoriesStoryIdEditRoute: StoriesStoryIdEditRoute,
  StoriesStoryIdIndexRoute: StoriesStoryIdIndexRoute,
}

const StoriesStoryIdRouteWithChildren = StoriesStoryIdRoute._addFileChildren(
  StoriesStoryIdRouteChildren,
)

interface StoriesLazyRouteChildren {
  StoriesStoryIdRoute: typeof StoriesStoryIdRouteWithChildren
}

const StoriesLazyRouteChildren: StoriesLazyRouteChildren = {
  StoriesStoryIdRoute: StoriesStoryIdRouteWithChildren,
}

const StoriesLazyRouteWithChildren = StoriesLazyRoute._addFileChildren(
  StoriesLazyRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  AccountSettingsLazyRoute: AccountSettingsLazyRoute,
  AuthenticationLazyRoute: AuthenticationLazyRoute,
  AuthorsLazyRoute: AuthorsLazyRouteWithChildren,
  FavoritesLazyRoute: FavoritesLazyRoute,
  NothingFoundLazyRoute: NothingFoundLazyRoute,
  StoriesLazyRoute: StoriesLazyRouteWithChildren,
  SubmitLazyRoute: SubmitLazyRoute,
  YourSubmissionsLazyRoute: YourSubmissionsLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
